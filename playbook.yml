---
- hosts: all
  tasks:
    - name: Build hosts file (backups will be made)
      lineinfile: dest=/etc/hosts regexp='{{ hostvars[item].ansible_hostname }}$' line='{{ hostvars[item].ansible_default_ipv4.address }} {{ item }} {{ hostvars[item].ansible_hostname }}' state=present backup=yes
      when: hostvars[item].ansible_default_ipv4.address is defined
      with_items: groups['all']

  roles:
    - { role: ansible-http-proxy, proxy_server: 'http://192.168.112.14:3128', tags: ['http-proxy'] }
    - { role: ansible-tuna, tags: ['tuna'] }

- hosts: [mesos_masters]
  sudo: True
  pre_tasks:
    - name: Install HAProxy
      apt: pkg=haproxy state=present
    - name: Sets haproxy to enabled
      lineinfile: dest=/etc/default/haproxy regexp="^ENABLED" line="ENABLED=1"
  roles:
    - { role: 'ansible-java8', tags: ['runtimes', 'java'] }
    - { role: 'ansible-zookeeper', zookeeper_hosts: "{{ groups.mesos_masters }}", tags: ['zookeeper'] }
    - { role: 'ansible-mesos',
        mesos_quorum: "2", 
        zookeeper_hostnames: "{{ groups.mesos_masters | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}", 
        mesos_install_mode: 'master', mesos_cluster_name: 'mlh_mesos', tags: ['mesos', 'platforms'] }
    - { role: 'ansible-marathon', 
        zookeeper_hostnames: "{{ groups.mesos_masters | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}",
        tags: ['mesos-tools'] }
    - { role: 'ansible-consul', 
        consul_client_address: "0.0.0.0",  consul_version: "0.4.1", 
        consul_datacenter: "sea", consul_is_server: true, consul_servers: "{{ groups.mesos_masters  }}", 
        consul_is_ui: true, consul_join_at_start: true }
    - { role: 'ansible-mesos-spark', tags: ['spark'], mesos_master: "{{ groups.mesos_masters|first }}" }


- hosts: [mesos_slaves]
  sudo: True
  pre_tasks:
    - name: Remove require tty
      lineinfile: regexp="tty" dest=/etc/sudoers/os_defaults state=absent
      tags: ['system']
  roles: 
    - { role: 'ansible-docker', tags: ['docker'] }
    - { role: 'ansible-java8', tags: ['java'], when: ansible_os_family == 'Debian' }
    - { role: 'ansible-mesos', mesos_containerizers: "docker,mesos", zookeeper_hostnames: "{{ groups.mesos_masters | join(':' + zookeeper_client_port + ',')  }}:{{ zookeeper_client_port  }}",  mesos_install_mode: "slave", tags:  ['mesos'] }
    - { role: 'ansible-consul', consul_version: "0.4.1", consul_client_address: "0.0.0.0", consul_is_server: false, consul_datacenter: "sea", consul_servers: "{{ groups.mesos_masters }}", consul_join_at_start: true, tags: ['consul'] }
    - { role: 'ansible-mesos-spark', tags: ['spark'], mesos_master: "{{ groups.mesos_masters|first }}" }
